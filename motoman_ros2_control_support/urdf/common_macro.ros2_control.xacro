<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="motoman_common_ros2_control_macro" params="
               name
               prefix
               joints_with_suffix:=^|false
               use_mock_hardware:=^|false
               sim_gazebo_classic:=^|false
               sim_gazebo:=^|false
               simulation_controllers
               description_package"
               >

    <xacro:property name="joint_1_suffix" value=""/>
    <xacro:property name="joint_2_suffix" value=""/>
    <xacro:property name="joint_3_suffix" value=""/>
    <xacro:property name="joint_4_suffix" value=""/>
    <xacro:property name="joint_5_suffix" value=""/>
    <xacro:property name="joint_6_suffix" value=""/>

    <xacro:if value="${joints_with_suffix}">
      <xacro:property name="joint_1_suffix" value="_s"/>
      <xacro:property name="joint_2_suffix" value="_l"/>
      <xacro:property name="joint_3_suffix" value="_u"/>
      <xacro:property name="joint_4_suffix" value="_r"/>
      <xacro:property name="joint_5_suffix" value="_b"/>
      <xacro:property name="joint_6_suffix" value="_t"/>
    </xacro:if>

    <ros2_control name="${name}" type="system">

      <hardware>
        <xacro:if value="${sim_gazebo}">
          <plugin>gz_ros2_control/GazeboSimSystem</plugin>
        </xacro:if>
        <xacro:unless value="${sim_gazebo}">
          <xacro:if value="${use_mock_hardware}">
            <plugin>mock_components/GenericSystem</plugin>
          </xacro:if>
          <xacro:if value="${sim_gazebo_classic}">
            <plugin>gazebo_ros2_control/GazeboSystem</plugin>
          </xacro:if>
        </xacro:unless>
      </hardware>

    <joint name="${prefix}joint_1${joint_1_suffix}">
        <command_interface name="position">
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0</param>
        </state_interface>
      </joint>
      <joint name="${prefix}joint_2${joint_2_suffix}">
        <command_interface name="position">
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0</param>
        </state_interface>
	  </joint>
      <joint name="${prefix}joint_3${joint_3_suffix}">
        <command_interface name="position">
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0</param>
        </state_interface>
	  </joint>
      <joint name="${prefix}joint_4${joint_4_suffix}">
        <command_interface name="position">
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0</param>
        </state_interface>
      </joint>
      <joint name="${prefix}joint_5${joint_5_suffix}">
        <command_interface name="position">
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0</param>
        </state_interface>
      </joint>
      <joint name="${prefix}joint_6${joint_6_suffix}">
        <command_interface name="position">
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">0</param>
        </state_interface>
      </joint>

    </ros2_control>

    <xacro:if value="$(arg sim_gazebo_classic)">
      <!-- Gazebo plugins -->
      <gazebo reference="world">
      </gazebo>
      <gazebo>
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <parameters>${simulation_controllers}</parameters>
        </plugin>
      </gazebo>
    </xacro:if>

    <xacro:if value="$(arg sim_gazebo)">
      <!-- Gazebo plugins -->
      <gazebo reference="world">
      </gazebo>
      <gazebo>
        <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
          <parameters>${simulation_controllers}</parameters>
          <controller_manager_node_name>${prefix}controller_manager</controller_manager_node_name>
            <ros>
              <remapping>/position_trajectory_controller/follow_joint_trajectory/_action/feedback:=/follow_joint_trajectory/_action/feedback</remapping>
              <remapping>/position_trajectory_controller/follow_joint_trajectory/_action/status:=/follow_joint_trajectory/_action/status</remapping>
              <remapping>/position_trajectory_controller/follow_joint_trajectory/_action/cancel_goal:=/follow_joint_trajectory/_action/cancel_goal</remapping>
              <remapping>/position_trajectory_controller/follow_joint_trajectory/_action/get_result:=/follow_joint_trajectory/_action/get_result</remapping>
              <remapping>/position_trajectory_controller/follow_joint_trajectory/_action/send_goal:=/follow_joint_trajectory/_action/send_goal</remapping>
          </ros>
        </plugin>
      </gazebo>
    </xacro:if>

  </xacro:macro>
</robot>
